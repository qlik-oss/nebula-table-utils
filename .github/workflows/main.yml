name: Main

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main
      - release/*

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Read pkg.json
        uses: actions/github-script@v6
        id: package
        with:
          script: |
            try {
              const fs = require('fs')
              const jsonString = fs.readFileSync('./package.json')
              const pkg = JSON.parse(jsonString)
              return Object.keys(pkg.scripts)
            } catch(err) {
              core.error("Error while reading or parsing the JSON")
              core.setFailed(err)
            }

      - name: Install dependencies
        shell: bash
        run: yarn install --immutable

      - name: Lint
        if: contains(fromJSON(steps.package.outputs.result), 'lint')
        run: yarn lint

      - name: Prettier Format
        if: contains(fromJSON(steps.package.outputs.result), 'format:check')
        run: yarn format:check

      - name: Type check
        if: contains(fromJSON(steps.package.outputs.result), 'types:check')
        run: yarn types:check

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Read pkg.json
        uses: actions/github-script@v6
        id: package
        with:
          script: |
            try {
              const fs = require('fs')
              const jsonString = fs.readFileSync('./package.json')
              const pkg = JSON.parse(jsonString)
              return Object.keys(pkg.scripts)
            } catch(err) {
              core.error("Error while reading or parsing the JSON")
              core.setFailed(err)
            }

      - name: Install dependencies
        shell: bash
        run: yarn install --immutable

      - name: Run unit test
        if: contains(fromJSON(steps.package.outputs.result), 'test:unit')
        run: yarn test:coverage --ci --reporters="github-actions" --reporters="summary"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Read pkg.json
        uses: actions/github-script@v6
        id: package
        with:
          script: |
            try {
              const fs = require('fs')
              const jsonString = fs.readFileSync('./package.json')
              const pkg = JSON.parse(jsonString)
              return Object.keys(pkg.scripts)
            } catch(err) {
              core.error("Error while reading or parsing the JSON")
              core.setFailed(err)
            }

      - name: Install dependencies
        shell: bash
        run: yarn install --immutable

      # TODO:
      # make sure to report the bundle analyzer output
      - name: Build
        if: contains(fromJSON(steps.package.outputs.result), 'build:prod')
        run: yarn build:prod
