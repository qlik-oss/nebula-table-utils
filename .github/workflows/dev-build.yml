name: Dev Build

on:
  issue_comment:
    types: [created]

jobs:
  dev-build:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.add-version.outputs.version }}

    steps:
      - name: Detect deploy comment
        uses: khan/pull-request-comment-trigger@master
        id: check-comment
        with:
          trigger: '#deploy-me'
          reaction: rocket
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Extract branch name
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
        with:
          repo_token: ${{ secrets.GH_ACCESS_TOKEN }}
        if: steps.check-comment.outputs.triggered == 'true'

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - uses: pnpm/action-setup@v2
        with:
          version: 6.0.2

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        shell: bash
        run: pnpm install

      - name: Build
        run: pnpm build:prod

      - name: Setup access to qlik npm registry
        shell: bash
        run: bash ${GITHUB_WORKSPACE}/.github/scripts/create-npmrc.sh
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_CI_TOKEN }}

      - name: Version Info
        shell: bash
        run: bash ${GITHUB_WORKSPACE}/.github/scripts/get-version-info.sh

      - name: Generate package version value
        shell: bash
        run: bash ${GITHUB_WORKSPACE}/.github/scripts/generate-pkg-version.sh
        env:
          BRANCH_NAME: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Publish
        run: bash ${GITHUB_WORKSPACE}/.github/scripts/publish-script.sh

      - name: Add version value to env
        # After publishing, the version should be an integration version
        run: echo "version=$VERSION" >> $GITHUB_OUTPUT
        id: add-version

      - name: Comment on the PR with the package version
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}
          body: |
            :package: Snapshot build is ready: `${{ steps.add-version.outputs.version }}`
