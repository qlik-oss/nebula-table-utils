name: Dev Build

on:
  issue_comment:
    types: [created]

jobs:
  dev-build:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.add-version.outputs.version }}

    steps:
      - name: Detect deploy comment
        uses: khan/pull-request-comment-trigger@master
        id: check-comment
        with:
          trigger: '#deploy-me'
          reaction: rocket
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        # Added by khan/pull-request-comment-trigger
        if: steps.check-comment.outputs.triggered == 'true'

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      # TODO:
      # build and publish
      - name: Install dependencies
        shell: bash
        run: yarn install --immutable

      - name: Build
        run: yarn build:prod

      - name: Setup access to qlik npm registry
        shell: bash
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
          echo "//npm.pkg.github.com/:always-auth=true" >> ~/.npmrc
          echo "@qlik-oss:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          cat ~/.npmrc

      - uses: qlik-oss/ci-tools/action-version@master

      # - uses: qlik-trial/qmfe-workflows/actions/publish-npm-integration-build@v1
      - name: Generate integration version value
        shell: bash
        run: |
          chmod +x ${GITHUB_WORKSPACE}/.github/scripts/dev-build.sh
          bash ${GITHUB_WORKSPACE}/.github/scripts/dev-build.sh
        env: 
          BRANCH_NAME: ${{ steps.comment-branch.outputs.head_ref }}
        

      - name: Publish
        run: |
          # make sure we have .d.ts files in our package
          DTS=`ls ./dist/** | grep d.ts | wc -l`
          echo "# of *.d.ts files is $DTS"
          if [[ $DTS -eq 0 ]]; then
            echo "Missing *.d.ts files"
            exit 1
          fi
          yarn publish ./dist --ignore-scripts

      # # outro
      # - name: Add version value to env
      #   run: |
      #     # After publishing, the version should be an integration version
      #     echo "version=$VERSION" >> $GITHUB_OUTPUT
      #   id: add-version

      # - name: Comment on the PR with the package version
      #   uses: actions-ecosystem/action-create-comment@v1
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     body: |
      #       :robot: Test Pkg is ready: `${{ steps.add-version.outputs.version }}`
